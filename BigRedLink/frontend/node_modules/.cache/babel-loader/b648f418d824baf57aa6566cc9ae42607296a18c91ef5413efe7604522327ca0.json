{"ast":null,"code":"var _jsxFileName = \"/workspaces/bigredlink/BigRedLink/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport apiUrl from './apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    username: '',\n    password: '',\n    balance: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('/api/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          username: formData.username,\n          password: formData.password,\n          balance: parseFloat(formData.balance) || 0.00\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        alert('Registration failed: ' + data.error);\n      } else {\n        alert('Registration successful. Redirecting to login page...');\n        window.location.href = '/';\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during registration.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl mb-5 text-center\",\n      children: \"Register a New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-80\",\n      children: [['firstName', 'lastName', 'username', 'password', 'balance'].map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-bold mb-2\",\n          children: field === 'balance' ? 'Initial Balance ($)' : field.charAt(0).toUpperCase() + field.slice(1) + ':'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === 'password' ? 'password' : 'text',\n          className: \"w-full px-3 py-2 border rounded\",\n          name: field,\n          value: formData[field],\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        className: \"w-full bg-red-700 text-white py-2 rounded-md hover:bg-red-800 transition\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"IKkiFjCI52c4DTY0gnpqSdT+2B4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","apiUrl","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","firstName","lastName","username","password","balance","handleInputChange","e","name","value","target","prevData","handleRegister","response","fetch","method","headers","body","JSON","stringify","first_name","last_name","parseFloat","data","json","error","alert","window","location","href","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","field","index","charAt","toUpperCase","slice","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/workspaces/bigredlink/BigRedLink/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport apiUrl from './apiConfig';\n\nconst Register = () => {\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        balance: ''\n    });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevData) => ({ ...prevData, [name]: value }));\n    };\n\n    const handleRegister = async () => {\n        try {\n            const response = await fetch('/api/users/', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    first_name: formData.firstName,\n                    last_name: formData.lastName,\n                    username: formData.username,\n                    password: formData.password,\n                    balance: parseFloat(formData.balance) || 0.00\n                })\n            });\n            const data = await response.json();\n\n            if (data.error) {\n                alert('Registration failed: ' + data.error);\n            } else {\n                alert('Registration successful. Redirecting to login page...');\n                window.location.href = '/';\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            alert('An error occurred during registration.');\n        }\n    };\n\n    return (\n        <div className=\"flex flex-col items-center justify-center h-screen\">\n            <h2 className=\"text-3xl mb-5 text-center\">Register a New Account</h2>\n            <form className=\"bg-white p-6 rounded-lg shadow-lg w-80\">\n                {['firstName', 'lastName', 'username', 'password', 'balance'].map((field, index) => (\n                    <div className=\"mb-4\" key={index}>\n                        <label className=\"block text-gray-700 font-bold mb-2\">\n                            {field === 'balance' ? 'Initial Balance ($)' : field.charAt(0).toUpperCase() + field.slice(1) + ':'}\n                        </label>\n                        <input\n                            type={field === 'password' ? 'password' : 'text'}\n                            className=\"w-full px-3 py-2 border rounded\"\n                            name={field}\n                            value={formData[field]}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                ))}\n                <button\n                    type=\"button\"\n                    onClick={handleRegister}\n                    className=\"w-full bg-red-700 text-white py-2 rounded-md hover:bg-red-800 transition\"\n                >\n                    Register\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}